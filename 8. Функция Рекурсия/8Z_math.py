'''
Задача №3815. Небоскреб
В небоскребе n этажей. Известно, что если уронить стеклянный шарик с
этажа номер p, и шарик разобъется, то если уронить шарик с этажа номер
p+1, то он тоже разобъется. Также известно, что при броске с последнего
этажа шарик всегда разбивается.

Вы хотите определить минимальный номер этажа, при падении с которого
шарик разбивается. Для проведения экспериментов у вас есть два шарика.
Вы можете разбить их все, но в результате вы должны абсолютно точно
определить этот номер.

Определите, какого числа бросков достаточно, чтобы заведомо решить
эту задачу.

Входные данные
Программа получает на вход количество этажей в небоскребе n

Выходные данные
Требуется вывести наименьшее число бросков, при котором можно
всегда решить задачу.

Тесты к этой задаче закрытые.

Примечание
Комментарий к первому примеру. Нужно бросить шарик со 2-го этажа.
Если он разобъется, то бросим второй шарик с 1-го этажа, а если не
разобъется - то бросим шарик с 3-го этажа.

Подсказки.
1. Как следует действовать, если шарик был бы только один?
2. Пусть шариков два и мы бросили один шарик с этажа номер k.
Как мы будем действовать в зависимости от того, разобъется ли шарик или нет?
3. Пусть f(n) - это минимальное число бросков, за которое можно определить
искомый этаж, если бы в небоскребе было n этажей. Выразите f(n) через
значения f(a) для меньших значений a.

Примеры
входные данные
4
выходные данные
2
входные данные
7
выходные данные
3

1 - 0
2 - 1
3 - 2
4 - 2  
5 - 3  
6 - 3  
7 - 3 
8 - 4  
9 - 4  
10 - 4 
11 - 4 
12 - 5 
13 - 5 
14 - 5 
15 - 5 
16 - 5

Пускай есть новая последовательность, в которой n-ый член последовательности
равен номеру в исходной последовательности, где кончается подпоследовательность
из чисел n, S(2) = 1 + 2 = 3; S(4) = 1 + 2 + 3 + 4 = 10; то есть имеем сумму арифметической
прогрессии.
Формула суммы арифметической прогрессии:
S = (2 * a1 + d * (n - 1)) * n / 2;
где
S - количество этажей - 1, так как последовательность начинается с 0
a1 = 1, первый член последовательности
d = 1, разность прогрессии
n - искомое число

В итоге получаем квадратное уравнение вида:
n^2 + n - 2 * S = 0
Необходимо найти положительный корень и округлить в большую сторону,
если имеется дробная часть

Максимальное процессорное время	0.023	1
Максимальный расход памяти	4063232	2
Максимальное астрономическое время	0.025	1

100%
'''

import math

def skyScraper(n):
    ''''''
    return math.ceil((math.sqrt(1 + 8 * (n - 1)) - 1) / 2)  

n = int(input())
print(skyScraper(n))
