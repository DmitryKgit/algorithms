'''
Задача №3809. Ремонт в Ханое
Постановлением ЮНЕСКО оригинал Ханойской башни был подвергнут реставрации.
В связи с этим во время пользования головоломкой нельзя было перекладывать
кольца с первого стержня сразу на третий и наоборот.

Решите головоломку с учетом этих ограничений. Вам не нужно находить
минимальное решение, но количество совершенных перемещений не должно быть
больше 200000, при условии, что количество дисков не превосходит 10.

Входные данные
Вводится натуральное число - количество колец.

Выходные данные
Выведите ответ на задачу.

Примеры
входные данные
2
выходные данные
1 1 2
1 2 3
2 1 2
1 3 2
1 2 1
2 2 3
1 1 2
1 2 3

Алгоритм (рекурсивный):
Чтобы перенести башню высотой n с 1 стержня на 3 необходимо:
1)Перенести башню высотой n - 1 с 1 стержня на 3
2)Перенести диск n с 1 стержня на 2
3)Перенести башню высотой n - 1 с 3 стержня на 1
4)Перенести диск n со 2 стержня на 3
5)Перенести башню n - 1 с 1 стержня на 3
Чтобы перенести башню высотой n - 1 с 1 стержня на 3 необходимо:
1)Перенести башню высотой n - 2 с 1 стержня на 3
2)Перенести диск n - 1 с 1 стержня на 2
3)Перенести башню высотой n - 2 с 3 стержня на 1
4)Перенести диск n - 1 со 2 стержня на 3
5)Перенести башню n - 2 с 1 стержня на 3
...
Если высота башни n = 1, переносим сначала на нецелевой стержень, затем на целевой
(чтобы перенести с 1 стержня на 3, необходимо перенести с 1 на 2, затем со второго на 3)
по условию задачи

Башня с 3 стержня на 1 переносится по такому же алгоритму

100%
'''

def move(n, x, y):
    '''displays the algorithm of hanoi towers

    get 3 int, return the sequence of steps to move
    n disks height tower from the x bar to the y one
    if you can not move a disk from the 1st bar right
    on to the 3rd one but only from the 1st to the 2nd
    and from the 2nd to the 3rd
    '''
    if n == 1:
        print(n, x, 6 - x - y)
        print(n, 6 - x - y, y)
    else:
        move(n - 1, x, y)
        print(n, x, 6 - x - y)
        move(n - 1, y, x)
        print(n, 6 - x - y, y)
        move(n - 1, x, y)

n = int(input())
move(n, 1, 3)
