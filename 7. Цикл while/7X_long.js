/*
7X.js 30.01.2021. 
Определите наименьшее расстояние между двумя локальными максимумами последовательности натуральных чисел, 
завершающейся числом 0. Локальным максимумом называется такое число в последовательности, которое больше своих соседей. 
Если в последовательности нет двух локальных максимумов, выведите число 0.

Начальное и конечное значение при этом локальными максимумами не считаются.

Входные данные
Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, 
а служит как признак ее окончания).
1       1
2       2
1       3
1       0
2
1
2
1
0
Выходные данные
Выведите ответ на задачу.
2       0
Пояснение к тестам:
В первом тесте локальными максимумами являются все двойки (они больше соседей). 
Между последними - расстояние наименьшее.

Во втором тесте нет локального максимума.

1) Программа находит максимум 
2) Программа включает счётчик
3) Программа находит следующий максимум
4) Программа сравнивает счётчик с минимумом и обнуляет его
*/

function processing() {
    let prev2 = prev1 = cur = parseInt(prompt('Введите число')); 
    let minLen = Infinity;  // минимальная длина между максимумами
    let len = 0;            // длина между максимумами
    let max = false;        // нахождение максимума в последовательности
    while (cur != 0) {
        if (prev2 < prev1 && prev1 > cur) { // нахождение максимума
            if (minLen > len && max) {  // перезаписываем минимум, инициализация максимума
                minLen = len;
            }
            len = 0;    // обнуляем счётчик при следующем максимуме
            max = true;
        }
        if (max) {  // включаем счётчик после первого максимума
            len++;
        }
        [prev2, prev1, cur] = [prev1, cur, parseInt(prompt('Введите число'))];
    }
    return minLen == Infinity ? 0 : minLen;
}

console.log(processing());

// function autoTest() {
//     console.log(processing(0)); // 0            0
//     console.log(processing(1)); // 1 || 2       2
//     console.log(processing(2)); // 3            3
//     console.log(processing(8)); // 6            6
//     console.log(processing(6)); // -1          -1
//     console.log(processing(13)); // 7           7
// }

// autoTest();

