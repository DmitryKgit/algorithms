/*
7U.js 29.01.2021. 
Дана последовательность натуральных чисел, завершающаяся число 0. 
Определите наибольшую длину монотонного фрагмента последовательности (то есть такого фрагмента, 
где все элементы либо больше предыдущего, либо меньше).

Входные данные
Вводится последовательность целых чисел, оканчивающаяся числом 0 (само число 0 в последовательность не входит, 
а служит как признак ее окончания).
1
7
7
9
1
0
Выходные данные
Выведите ответ на задачу.
2

1) Если монотонное возрастание:
    Увеличиваем счётчик 1
2) Если монотонное убывание:
    Увеличиваем счётчик 2
3) Сравниваем с максимумом
*/

// цикл while использовать для заполнения массива?
const input = [6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7];

function processing(input) {
    let cnt1 = 1;
    let cnt2 = 1;
    let len = 1;
    for (let i = 1; i < input.length; i++) { // значение i - 1 для i = 1 существует, так как цикл начинается с 1
        if (input[i] > input[i - 1]) {       // последовательность монотонно растёт
            cnt1++;
            if (len < cnt1) {               // сравниваем с максимальной длиной
                len = cnt1;
            }
            console.log("if_1", cnt1, i);
        } else {                            // последовательность перестала расти
            cnt1 = 1;
        }
        if (input[i] < input[i - 1]) {      // последовательность монотонно убывает
            cnt2++;
            if (len < cnt2) {               // сравниваем с максимальной длиной
                len = cnt2;
            }
            console.log("if_2", cnt2, i);
        } else {                            // последовательность перестала убывать
            cnt2 = 1;
        }
    }
    return len;
}

console.log(processing(input));






