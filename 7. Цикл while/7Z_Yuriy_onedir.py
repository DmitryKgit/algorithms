'''
У исполнителя “Водолей” есть два сосуда, первый объемом A литров, второй объемом B литров, а также кран с водой. Водолей может выполнять следующие операции:

1) Наполнить сосуд A (обозначается >A).
2) Наполнить сосуд B (обозначается >B).
3) Вылить воду из сосуда A (обозначается A>).
4) Вылить воду из сосуда B (обозначается B>).
5) Перелить воду из сосуда A в сосуд B (обозначается как A>B).
6) Перелить воду из сосуда B в сосуд A (обозначается как B>A).
7) Команда переливания из одного сосуда в другой приводят к тому, что либо
первый сосуд полностью опустошается, либо второй сосуд полность наполняется.

Входные данные
Программа получает на вход три натуральных числа A, B, N, не превосходящих 104.

Выходные данные
Необходимо вывести алгоритм действий Водолея,
который позволяет получить в точности N литров в одном из сосудов,
если же такого алгоритма не существует, то программа должна вывести текст
Impossible.

Количество операций в алгоритме не должно превышать 10^5.
Гарантируется, что если задача имеет решение, то есть решение,
которое содержит не более, чем 105 операций.

Тесты к этой задаче закрытые.

Примеры
входные данные
3
5
1
выходные данные
>A
A>B
>A
A>B
входные данные
3
5
6
выходные данные
Impossible

TEST 100%

Чётные действия: Переливаем из большего в меньший

Нечётные действия:
    Если в большем есть вода, выливаем из меньшего
    Иначе наливаем в больший


'''

aMax = int(input())
bMax = int(input())
a = 0
b = 0
n = int(input())
count = 1
seq = 0 # Это переменная в которую записывается алгоритм
aSym = 'A'
bSym = 'B'
if aMax < bMax:
    aSym = 'B'
    bSym = 'A'
    aMax, bMax = bMax, aMax
while a != n and b != n and count <= 75000:
    if count % 2 == 0: # На четных шагах переливает из большего в меньший
        if a + b > bMax:
            a = a + b - bMax
            b = bMax
        else:
            b = a + b
            a = 0
        seq = seq * 10 + 1
    elif a > 0:  # На нечетных доливает в больший или опустошает меньший
        b = 0
        seq = seq * 10 + 2
    else:
        a = aMax
        seq = seq * 10 + 3
    count += 1
if count > 75000: # хак, при 80 000 время больше секунды, тест не проходит
    print('Impossible')
else:
    seq = str(seq).replace('1', aSym + '>' + bSym + '\n' ) \
            .replace('2', bSym + '>' + '\n').replace('3', '>' + aSym + '\n')
    print(seq[:-1])
    

