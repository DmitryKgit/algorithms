'''
Задача №3667. Исполнитель Водолей
У исполнителя “Водолей” есть два сосуда, первый объемом A литров,
второй объемом B литров, а также кран с водой. Водолей может
выполнять следующие операции:

Наполнить сосуд A (обозначается >A).
Наполнить сосуд B (обозначается >B).
Вылить воду из сосуда A (обозначается A>).
Вылить воду из сосуда B (обозначается B>).
Перелить воду из сосуда A в сосуд B (обозначается как A>B).
Перелить воду из сосуда B в сосуд A (обозначается как B>A).
Команда переливания из одного сосуда в другой приводят к тому,
что либо первый сосуд полностью опустошается,
либо второй сосуд полность наполняется.

Входные данные
Программа получает на вход три натуральных числа A, B, N, не превосходящих 10^4.

Выходные данные
Необходимо вывести алгоритм действий Водолея, который позволяет получить в
точности N литров в одном из сосудов, если же такого алгоритма не существует,
то программа должна вывести текст Impossible.

Количество операций в алгоритме не должно превышать 10^5.
Гарантируется, что если задача имеет решение, то есть решение,
которое содержит не более, чем 10^5 операций.

Тесты к этой задаче закрытые.

Примеры
входные данные
3
5
1
выходные данные
>A
A>B
>A
A>B
входные данные
3
5
6
выходные данные
Impossible

Цикл while - из большего в меньшее.

Максимальное процессорное время	        0.212
Максимальный расход памяти	        30982144
Максимальное астрономическое время	0.214

LIMIT = 10^5

100%
'''

A = int(input())
B = int(input())
N = int(input())
capA = 0 # меньшая емкость
capB = 0 # большая емкость
LIMIT = 100000
count = 0
print_list = []
Min = 'A'
Max = 'B'
if A < N and B < N: # N больше каждой из емкостей A и B
    print('Impossible')
elif A == N:
    print('>A')
elif B == N:
    print('>B')
else:
    if A > B: # A всегда меньше B
        Min, Max = Max, Min
        A, B = B, A
    while count < LIMIT and capA != N and capB != N:
        capB += A
        print_list.append('>' + Min + '\n' + Min + '>' + Max)
        if capB > B:
            capA = capB % B # После переливания из A остаток поместится в A
            if capA != N:
                print_list.append(Max + '>' + '\n' + Min + '>' + Max)
                capB = capA
        count += 1
    if count == LIMIT: # решение не найдено за 10^5 шагов
        print('Impossible')
    else:
        print('\n'.join(print_list))
        






