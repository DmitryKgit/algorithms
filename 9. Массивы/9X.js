/*
9X.js 12.05.2021
N  кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. Затем по этому ряду бросили K шаров, при этом i-й шар сбил все кегли с номерами от li до ri включительно. Определите, какие кегли остались стоять на месте.

Входные данные
Программа получает на вход количество кеглей N и количество бросков K. Далее идет K пар чисел li, ri, при этом 1≤li≤ri≤N≤100.

Выходные данные
Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, если j-я кегля была сбита.

Примеры
входные данные
10 3
8 10
2 5
3 6
выходные данные
I.....I...
*/

// принимает массив кеглей и массивы попыток, возвращает массив - ответ на задачу
function bowling([N, nums]) {
    N = new Array(N).fill('I');
    nums.forEach(item => {
        let len = item[1] - item[0] + 1; // количество кеглей, сбитых за попытку
        N.splice(item[0] - 1, len, ...((new Array(len)).fill('.')));    
    });
    return N;
}

// принимает массив, печатает массив на консоль
function arrayPrint(arr) {
    console.log(arr.map(element => String(element)).join(' '));
}

// принимает длину ряда, количество шаров, массивы с номерами сбитых кегель, вводимые пользователем, возвращает массив данных
function arrayInput() {
    let N = Number(prompt('Введите длину ряда'));
    let K = Number(prompt('Введите количество шаров'));
    let nums = new Array(K);
    for (let i = 0; i < nums.length; i++) {
        nums[i] = [prompt('Номер левой кегли'), prompt('Номер правой кегли')];
    }
    return [N, nums];
}

function interfaceTest() {
    arrayPrint(bowling(arrayInput()));    
}

function test() {
    arrayPrint(bowling([10, [[8, 10], [2, 5], [3, 6]]])); 
}

// interfaceTest();
test();






